{"remainingRequest":"D:\\vue02\\node_modules\\babel-loader\\lib\\index.js!D:\\vue02\\node_modules\\vuetify\\lib\\components\\VCalendar\\modes\\stack.js","dependencies":[{"path":"D:\\vue02\\node_modules\\vuetify\\lib\\components\\VCalendar\\modes\\stack.js","mtime":499162500000},{"path":"D:\\vue02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue02\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../../src/components/VCalendar/modes/stack.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalendarEventOverlapMode, CalendarEventVisual } from 'types'\nimport { getOverlapGroupHandler, getVisuals, hasOverlap, getNormalizedRange } from './common'\nimport { getTimestampIdentifier } from '../util/timestamp'\n\ninterface Group {\n  start: number\n  end: number\n  visuals: CalendarEventVisual[]\n}\n\ninterface Node {\n  parent: Node | null\n  sibling: boolean\n  index: number\n  visual: CalendarEventVisual\n  start: number\n  end: number\n  children: Node[]\n}\n\nconst FULL_WIDTH = 100\n\nconst DEFAULT_OFFSET = 5\n\nconst WIDTH_MULTIPLIER = 1.7\n\n/**\n * Variation of column mode where events can be stacked. The priority of this\n * mode is to stack events together taking up the least amount of space while\n * trying to ensure the content of the event is always visible as well as its\n * start and end. A sibling column has intersecting event content and must be\n * placed beside each other. Non-sibling columns are offset by 5% from the\n * previous column. The width is scaled by 1.7 so the events overlap and\n * whitespace is reduced. If there is a hole in columns the event width is\n * scaled up so it intersects with the next column. The columns have equal\n * width in the space they are given. If the event doesn't have any to the\n * right of it that intersect with it's content it's right side is extended\n * to the right side.\n */\n\nexport const stack: CalendarEventOverlapMode = (events, firstWeekday, overlapThreshold) => {\n  const handler = getOverlapGroupHandler(firstWeekday)\n\n  // eslint-disable-next-line max-statements\n  return (day, dayEvents, timed) => {\n    if (!timed) {\n      return handler.getVisuals(day, dayEvents, timed)\n    }\n\n    const dayStart = getTimestampIdentifier(day)\n    const visuals = getVisuals(dayEvents, dayStart)\n    const groups = getGroups(visuals, dayStart)\n\n    for (const group of groups) {\n      const nodes: Node[] = []\n\n      for (const visual of group.visuals) {\n        const child = getNode(visual, dayStart)\n        const index = getNextIndex(child, nodes)\n\n        if (index === false) {\n          const parent = getParent(child, nodes)\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            child.index = parent.index + 1\n            parent.children.push(child)\n          }\n        } else {\n          const [parent] = getOverlappingRange(child, nodes, index - 1, index - 1)\n          const children = getOverlappingRange(child, nodes, index + 1, index + nodes.length, true)\n\n          child.children = children\n          child.index = index\n\n          if (parent) {\n            child.parent = parent\n            child.sibling = hasOverlap(child.start, child.end, parent.start, addTime(parent.start, overlapThreshold))\n            parent.children.push(child)\n          }\n\n          for (const grand of children) {\n            if (grand.parent === parent) {\n              grand.parent = child\n            }\n\n            const grandNext = grand.index - child.index <= 1\n            if (grandNext && child.sibling &&\n              hasOverlap(child.start, addTime(child.start, overlapThreshold), grand.start, grand.end)) {\n              grand.sibling = true\n            }\n          }\n        }\n\n        nodes.push(child)\n      }\n\n      calculateBounds(nodes, overlapThreshold)\n    }\n\n    visuals.sort((a, b) => (a.left - b.left) || (a.event.startTimestampIdentifier - b.event.startTimestampIdentifier))\n\n    return visuals\n  }\n}\n\nfunction calculateBounds (nodes: Node[], overlapThreshold: number) {\n  for (const node of nodes) {\n    const { visual, parent } = node\n    const columns = getMaxChildIndex(node) + 1\n    const spaceLeft = parent ? parent.visual.left : 0\n    const spaceWidth = FULL_WIDTH - spaceLeft\n    const offset = Math.min(DEFAULT_OFFSET, FULL_WIDTH / columns)\n    const columnWidthMultiplier = getColumnWidthMultiplier(node, nodes)\n    const columnOffset = spaceWidth / (columns - node.index + 1)\n    const columnWidth = spaceWidth / (columns - node.index + (node.sibling ? 1 : 0)) * columnWidthMultiplier\n\n    if (parent) {\n      visual.left = node.sibling\n        ? spaceLeft + columnOffset\n        : spaceLeft + offset\n    }\n\n    visual.width = hasFullWidth(node, nodes, overlapThreshold)\n      ? FULL_WIDTH - visual.left\n      : Math.min(FULL_WIDTH - visual.left, columnWidth * WIDTH_MULTIPLIER)\n  }\n}\n\nfunction getColumnWidthMultiplier (node: Node, nodes: Node[]): number {\n  if (!node.children.length) {\n    return 1\n  }\n\n  const maxColumn = node.index + nodes.length\n  const minColumn = node.children.reduce((min, c) => Math.min(min, c.index), maxColumn)\n\n  return minColumn - node.index\n}\n\nfunction getOverlappingIndices (node: Node, nodes: Node[]): number[] {\n  const indices: number[] = []\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end)) {\n      indices.push(other.index)\n    }\n  }\n  return indices\n}\n\nfunction getNextIndex (node: Node, nodes: Node[]): number | false {\n  const indices = getOverlappingIndices(node, nodes)\n  indices.sort()\n\n  for (let i = 0; i < indices.length; i++) {\n    if (i < indices[i]) {\n      return i\n    }\n  }\n  return false\n}\n\nfunction getOverlappingRange (node: Node, nodes: Node[], indexMin: number, indexMax: number, returnFirstColumn = false): Node[] {\n  const overlapping: Node[] = []\n  for (const other of nodes) {\n    if (other.index >= indexMin && other.index <= indexMax && hasOverlap(node.start, node.end, other.start, other.end)) {\n      overlapping.push(other)\n    }\n  }\n  if (returnFirstColumn && overlapping.length > 0) {\n    const first = overlapping.reduce((min, n) => Math.min(min, n.index), overlapping[0].index)\n    return overlapping.filter(n => n.index === first)\n  }\n  return overlapping\n}\n\nfunction getParent (node: Node, nodes: Node[]): Node | null {\n  let parent: Node | null = null\n  for (const other of nodes) {\n    if (hasOverlap(node.start, node.end, other.start, other.end) && (parent === null || other.index > parent.index)) {\n      parent = other\n    }\n  }\n  return parent\n}\n\nfunction hasFullWidth (node: Node, nodes: Node[], overlapThreshold: number): boolean {\n  for (const other of nodes) {\n    if (other !== node &&\n      other.index > node.index &&\n      hasOverlap(node.start, addTime(node.start, overlapThreshold), other.start, other.end)) {\n      return false\n    }\n  }\n\n  return true\n}\n\nfunction getGroups (visuals: CalendarEventVisual[], dayStart: number): Group[] {\n  const groups: Group[] = []\n\n  for (const visual of visuals) {\n    const [start, end] = getNormalizedRange(visual.event, dayStart)\n    let added = false\n\n    for (const group of groups) {\n      if (hasOverlap(start, end, group.start, group.end)) {\n        group.visuals.push(visual)\n        group.end = Math.max(group.end, end)\n        added = true\n        break\n      }\n    }\n\n    if (!added) {\n      groups.push({ start, end, visuals: [visual] })\n    }\n  }\n\n  return groups\n}\n\nfunction getNode (visual: CalendarEventVisual, dayStart: number): Node {\n  const [start, end] = getNormalizedRange(visual.event, dayStart)\n\n  return {\n    parent: null,\n    sibling: true,\n    index: 0,\n    visual,\n    start,\n    end,\n    children: [],\n  }\n}\n\nfunction getMaxChildIndex (node: Node): number {\n  let max = node.index\n  for (const child of node.children) {\n    const childMax = getMaxChildIndex(child)\n    if (childMax > max) {\n      max = childMax\n    }\n  }\n  return max\n}\n\nfunction addTime (identifier: number, minutes: number): number {\n  const removeMinutes = identifier % 100\n  const totalMinutes = removeMinutes + minutes\n  const addHours = Math.floor(totalMinutes / 60)\n  const addMinutes = totalMinutes % 60\n\n  return identifier - removeMinutes + addHours * 100 + addMinutes\n}\n"],"sourceRoot":""}]}