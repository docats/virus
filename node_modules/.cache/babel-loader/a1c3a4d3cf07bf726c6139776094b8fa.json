{"remainingRequest":"D:\\vue02\\node_modules\\babel-loader\\lib\\index.js!D:\\vue02\\node_modules\\vuetify\\lib\\components\\VCalendar\\util\\timestamp.js","dependencies":[{"path":"D:\\vue02\\node_modules\\vuetify\\lib\\components\\VCalendar\\util\\timestamp.js","mtime":499162500000},{"path":"D:\\vue02\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\vue02\\node_modules\\babel-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["../../../../src/components/VCalendar/util/timestamp.ts"],"names":[],"mappings":"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","sourcesContent":["import { CalendarTimestamp, CalendarFormatter } from 'types'\n\nexport const PARSE_REGEX: RegExp = /^(\\d{4})-(\\d{1,2})(-(\\d{1,2}))?([^\\d]+(\\d{1,2}))?(:(\\d{1,2}))?(:(\\d{1,2}))?$/\nexport const PARSE_TIME: RegExp = /(\\d\\d?)(:(\\d\\d?)|)(:(\\d\\d?)|)/\n\nexport const DAYS_IN_MONTH: number[] = [0, 31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_LEAP: number[] = [0, 31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]\nexport const DAYS_IN_MONTH_MIN = 28\nexport const DAYS_IN_MONTH_MAX = 31\nexport const MONTH_MAX = 12\nexport const MONTH_MIN = 1\nexport const DAY_MIN = 1\nexport const DAYS_IN_WEEK = 7\nexport const MINUTES_IN_HOUR = 60\nexport const HOURS_IN_DAY = 24\nexport const FIRST_HOUR = 0\n\ntype CalendarTimestampFormatOptions = (timestamp: CalendarTimestamp, short: boolean) => object\ntype CalendarTimestampOperation = (timestamp: CalendarTimestamp) => CalendarTimestamp\nexport type VTime = number | string | {\n  hour: number\n  minute: number\n}\n\nexport function getStartOfWeek (timestamp: CalendarTimestamp, weekdays: number[], today?: CalendarTimestamp): CalendarTimestamp {\n  const start = copyTimestamp(timestamp)\n  findWeekday(start, weekdays[0], prevDay)\n  updateFormatted(start)\n  if (today) {\n    updateRelative(start, today, start.hasTime)\n  }\n  return start\n}\n\nexport function getEndOfWeek (timestamp: CalendarTimestamp, weekdays: number[], today?: CalendarTimestamp): CalendarTimestamp {\n  const end = copyTimestamp(timestamp)\n  findWeekday(end, weekdays[weekdays.length - 1])\n  updateFormatted(end)\n  if (today) {\n    updateRelative(end, today, end.hasTime)\n  }\n  return end\n}\n\nexport function getStartOfMonth (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const start = copyTimestamp(timestamp)\n  start.day = DAY_MIN\n  updateWeekday(start)\n  updateFormatted(start)\n  return start\n}\n\nexport function getEndOfMonth (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const end = copyTimestamp(timestamp)\n  end.day = daysInMonth(end.year, end.month)\n  updateWeekday(end)\n  updateFormatted(end)\n  return end\n}\n\nexport function parseTime (input: any): number | false {\n  if (typeof input === 'number') {\n    // when a number is given, it's minutes since 12:00am\n    return input\n  } else if (typeof input === 'string') {\n    // when a string is given, it's a hh:mm:ss format where seconds are optional\n    const parts = PARSE_TIME.exec(input)\n    if (!parts) {\n      return false\n    }\n    return parseInt(parts[1]) * 60 + parseInt(parts[3] || 0)\n  } else if (typeof input === 'object') {\n    // when an object is given, it must have hour and minute\n    if (typeof input.hour !== 'number' || typeof input.minute !== 'number') {\n      return false\n    }\n    return input.hour * 60 + input.minute\n  } else {\n    // unsupported type\n    return false\n  }\n}\n\nexport function validateTimestamp (input: any): boolean {\n  return !!PARSE_REGEX.exec(input)\n}\n\nexport function parseTimestamp (input: string, required?: false, now?: CalendarTimestamp): CalendarTimestamp | null\nexport function parseTimestamp (input: string, required: true, now?: CalendarTimestamp): CalendarTimestamp\nexport function parseTimestamp (input: string, required = false, now?: CalendarTimestamp): CalendarTimestamp | null {\n  // YYYY-MM-DD hh:mm:ss\n  const parts = PARSE_REGEX.exec(input)\n\n  if (!parts) {\n    if (required) {\n      throw new Error(`${input} is not a valid timestamp. It must be in the format of YYYY-MM-DD or YYYY-MM-DD hh:mm. Zero-padding is optional and seconds are ignored.`)\n    }\n    return null\n  }\n\n  const timestamp: CalendarTimestamp = {\n    date: input,\n    time: '',\n    year: parseInt(parts[1]),\n    month: parseInt(parts[2]),\n    day: parseInt(parts[4]) || 1,\n    hour: parseInt(parts[6]) || 0,\n    minute: parseInt(parts[8]) || 0,\n    weekday: 0,\n    hasDay: !!parts[4],\n    hasTime: !!(parts[6] && parts[8]),\n    past: false,\n    present: false,\n    future: false,\n  }\n\n  updateWeekday(timestamp)\n  updateFormatted(timestamp)\n\n  if (now) {\n    updateRelative(timestamp, now, timestamp.hasTime)\n  }\n\n  return timestamp\n}\n\nexport function parseDate (date: Date): CalendarTimestamp {\n  return updateFormatted({\n    date: '',\n    time: '',\n    year: date.getFullYear(),\n    month: date.getMonth() + 1,\n    day: date.getDate(),\n    weekday: date.getDay(),\n    hour: date.getHours(),\n    minute: date.getMinutes(),\n    hasDay: true,\n    hasTime: true,\n    past: false,\n    present: true,\n    future: false,\n  })\n}\n\nexport function getDayIdentifier (timestamp: { year: number, month: number, day: number }): number {\n  return timestamp.year * 10000 + timestamp.month * 100 + timestamp.day\n}\n\nexport function getTimeIdentifier (timestamp: { hour: number, minute: number }): number {\n  return timestamp.hour * 100 + timestamp.minute\n}\n\nexport function getTimestampIdentifier (timestamp: CalendarTimestamp): number {\n  return getDayIdentifier(timestamp) * 10000 + getTimeIdentifier(timestamp)\n}\n\nexport function updateRelative (timestamp: CalendarTimestamp, now: CalendarTimestamp, time = false): CalendarTimestamp {\n  let a = getDayIdentifier(now)\n  let b = getDayIdentifier(timestamp)\n  let present = a === b\n\n  if (timestamp.hasTime && time && present) {\n    a = getTimeIdentifier(now)\n    b = getTimeIdentifier(timestamp)\n    present = a === b\n  }\n\n  timestamp.past = b < a\n  timestamp.present = present\n  timestamp.future = b > a\n\n  return timestamp\n}\n\nexport function updateMinutes (timestamp: CalendarTimestamp, minutes: number, now?: CalendarTimestamp): CalendarTimestamp {\n  timestamp.hasTime = true\n  timestamp.hour = Math.floor(minutes / MINUTES_IN_HOUR)\n  timestamp.minute = minutes % MINUTES_IN_HOUR\n  timestamp.time = getTime(timestamp)\n  if (now) {\n    updateRelative(timestamp, now, true)\n  }\n\n  return timestamp\n}\n\nexport function updateWeekday (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.weekday = getWeekday(timestamp)\n\n  return timestamp\n}\n\nexport function updateFormatted (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.time = getTime(timestamp)\n  timestamp.date = getDate(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekday (timestamp: CalendarTimestamp): number {\n  if (timestamp.hasDay) {\n    const _ = Math.floor\n    const k = timestamp.day\n    const m = ((timestamp.month + 9) % MONTH_MAX) + 1\n    const C = _(timestamp.year / 100)\n    const Y = (timestamp.year % 100) - (timestamp.month <= 2 ? 1 : 0)\n\n    return (((k + _(2.6 * m - 0.2) - 2 * C + Y + _(Y / 4) + _(C / 4)) % 7) + 7) % 7\n  }\n\n  return timestamp.weekday\n}\n\nexport function isLeapYear (year: number): boolean {\n  return ((year % 4 === 0) && (year % 100 !== 0)) || (year % 400 === 0)\n}\n\nexport function daysInMonth (year: number, month: number) {\n  return isLeapYear(year) ? DAYS_IN_MONTH_LEAP[month] : DAYS_IN_MONTH[month]\n}\n\nexport function copyTimestamp (timestamp: CalendarTimestamp): CalendarTimestamp {\n  const { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future } = timestamp\n\n  return { date, time, year, month, day, weekday, hour, minute, hasDay, hasTime, past, present, future }\n}\n\nexport function padNumber (x: number, length: number): string {\n  let padded = String(x)\n  while (padded.length < length) {\n    padded = '0' + padded\n  }\n\n  return padded\n}\n\nexport function getDate (timestamp: CalendarTimestamp): string {\n  let str = `${padNumber(timestamp.year, 4)}-${padNumber(timestamp.month, 2)}`\n\n  if (timestamp.hasDay) str += `-${padNumber(timestamp.day, 2)}`\n\n  return str\n}\n\nexport function getTime (timestamp: CalendarTimestamp): string {\n  if (!timestamp.hasTime) {\n    return ''\n  }\n\n  return `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n}\n\nexport function nextMinutes (timestamp: CalendarTimestamp, minutes: number): CalendarTimestamp {\n  timestamp.minute += minutes\n  while (timestamp.minute > MINUTES_IN_HOUR) {\n    timestamp.minute -= MINUTES_IN_HOUR\n    timestamp.hour++\n    if (timestamp.hour >= HOURS_IN_DAY) {\n      nextDay(timestamp)\n      timestamp.hour = FIRST_HOUR\n    }\n  }\n\n  return timestamp\n}\n\nexport function nextDay (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.day++\n  timestamp.weekday = (timestamp.weekday + 1) % DAYS_IN_WEEK\n  if (timestamp.day > DAYS_IN_MONTH_MIN && timestamp.day > daysInMonth(timestamp.year, timestamp.month)) {\n    timestamp.day = DAY_MIN\n    timestamp.month++\n    if (timestamp.month > MONTH_MAX) {\n      timestamp.month = MONTH_MIN\n      timestamp.year++\n    }\n  }\n\n  return timestamp\n}\n\nexport function prevDay (timestamp: CalendarTimestamp): CalendarTimestamp {\n  timestamp.day--\n  timestamp.weekday = (timestamp.weekday + 6) % DAYS_IN_WEEK\n  if (timestamp.day < DAY_MIN) {\n    timestamp.month--\n    if (timestamp.month < MONTH_MIN) {\n      timestamp.year--\n      timestamp.month = MONTH_MAX\n    }\n    timestamp.day = daysInMonth(timestamp.year, timestamp.month)\n  }\n\n  return timestamp\n}\n\nexport function relativeDays (\n  timestamp: CalendarTimestamp,\n  mover: CalendarTimestampOperation = nextDay,\n  days = 1\n): CalendarTimestamp {\n  while (--days >= 0) mover(timestamp)\n  return timestamp\n}\n\nexport function diffMinutes (min: CalendarTimestamp, max: CalendarTimestamp) {\n  const Y = (max.year - min.year) * 525600\n  const M = (max.month - min.month) * 43800\n  const D = (max.day - min.day) * 1440\n  const h = (max.hour - min.hour) * 60\n  const m = (max.minute - min.minute)\n\n  return Y + M + D + h + m\n}\n\nexport function findWeekday (timestamp: CalendarTimestamp, weekday: number,\n  mover: CalendarTimestampOperation = nextDay, maxDays = 6): CalendarTimestamp {\n  while (timestamp.weekday !== weekday && --maxDays >= 0) mover(timestamp)\n\n  return timestamp\n}\n\nexport function getWeekdaySkips (weekdays: number[]): number[] {\n  const skips: number[] = [1, 1, 1, 1, 1, 1, 1]\n  const filled: number[] = [0, 0, 0, 0, 0, 0, 0]\n  for (let i = 0; i < weekdays.length; i++) {\n    filled[weekdays[i]] = 1\n  }\n  for (let k = 0; k < DAYS_IN_WEEK; k++) {\n    let skip = 1\n    for (let j = 1; j < DAYS_IN_WEEK; j++) {\n      const next = (k + j) % DAYS_IN_WEEK\n      if (filled[next]) {\n        break\n      }\n      skip++\n    }\n    skips[k] = filled[k] * skip\n  }\n\n  return skips\n}\n\nexport function createDayList (\n  start: CalendarTimestamp,\n  end: CalendarTimestamp,\n  now: CalendarTimestamp,\n  weekdaySkips: number[],\n  max = 42,\n  min = 0\n): CalendarTimestamp[] {\n  const stop = getDayIdentifier(end)\n  const days: CalendarTimestamp[] = []\n  let current = copyTimestamp(start)\n  let currentIdentifier = 0\n  let stopped = currentIdentifier === stop\n\n  if (stop < getDayIdentifier(start)) {\n    throw new Error('End date is earlier than start date.')\n  }\n\n  while ((!stopped || days.length < min) && days.length < max) {\n    currentIdentifier = getDayIdentifier(current)\n    stopped = stopped || currentIdentifier === stop\n    if (weekdaySkips[current.weekday] === 0) {\n      current = nextDay(current)\n      continue\n    }\n    const day = copyTimestamp(current)\n    updateFormatted(day)\n    updateRelative(day, now)\n    days.push(day)\n    current = relativeDays(current, nextDay, weekdaySkips[current.weekday])\n  }\n\n  if (!days.length) throw new Error('No dates found using specified start date, end date, and weekdays.')\n\n  return days\n}\n\nexport function createIntervalList (timestamp: CalendarTimestamp, first: number,\n  minutes: number, count: number, now?: CalendarTimestamp): CalendarTimestamp[] {\n  const intervals: CalendarTimestamp[] = []\n\n  for (let i = 0; i < count; i++) {\n    const mins = (first + i) * minutes\n    const int = copyTimestamp(timestamp)\n    intervals.push(updateMinutes(int, mins, now))\n  }\n\n  return intervals\n}\n\nexport function createNativeLocaleFormatter (locale: string, getOptions: CalendarTimestampFormatOptions): CalendarFormatter {\n  const emptyFormatter: CalendarFormatter = (_t, _s) => ''\n\n  if (typeof Intl === 'undefined' || typeof Intl.DateTimeFormat === 'undefined') {\n    return emptyFormatter\n  }\n\n  return (timestamp, short) => {\n    try {\n      const intlFormatter = new Intl.DateTimeFormat(locale || undefined, getOptions(timestamp, short))\n      const time = `${padNumber(timestamp.hour, 2)}:${padNumber(timestamp.minute, 2)}`\n      const date = timestamp.date\n      return intlFormatter.format(new Date(`${date}T${time}:00+00:00`))\n    } catch (e) {\n      return ''\n    }\n  }\n}\n"],"sourceRoot":""}]}